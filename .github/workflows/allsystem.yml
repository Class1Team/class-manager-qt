name: allsystem
on: 
  # push代码时触发workflow
  push:
    # 忽略README.md
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
  # pull_request时触发workflow
  pull_request:
    # 忽略README.md
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
jobs:
  build-on-window-22:
    runs-on: windows-2022
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: install boost
        id: install-boost
        uses: MarkusJx/install-boost@v2.4.1
        with:
          boost_version: '1.80.0'
          platform_version: 2022
          toolset: 'msvc'
      - name: install qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.1'
          host: 'windows'
          target: 'desktop'
          arch: 'win64_msvc2019_64'
      - name: build demo
        run: |
          qmake
          cmake
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
      # tag 打包
      - name: package
        if: startsWith(github.event.ref, 'refs/tags/')
        env:
          VCINSTALLDIR: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC'
          archiveName: ${{ matrix.qt_ver }}-${{ matrix.qt_target }}-${{ matrix.qt_arch }}
          targetName: HelloActions-Qt.exe
        shell: pwsh
        run: |
          # 创建文件夹
          New-Item -ItemType Directory ${env:archiveName}
          # 拷贝exe
          Copy-Item bin\${env:targetName} ${env:archiveName}\
          # 拷贝依赖
          windeployqt --qmldir . ${env:archiveName}\${env:targetName}
          # 打包zip
          Compress-Archive -Path ${env:archiveName} ${env:archiveName}'.zip'
          # 记录环境变量packageName给后续step
          $name = ${env:archiveName}
          echo "::set-env name=packageName::$name"
          # 打印环境变量packageName
          Write-Host 'packageName:'${env:packageName}

  build-on-ubuntu-22:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: install boost
        id: install-boost
        uses: MarkusJx/install-boost@v2.4.1
        with:
          boost_version: '1.80.0'
          platform_version: 22.04
          toolset: 'gcc'

      - name: install qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.1'
          target: 'desktop'
      - name: build demo
        run: |
          qmake
          cmake
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
  build_on_macos:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest]
        qt_ver: [5.9.8,6.5.1]
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: install boost
        id: install-boost
        uses: MarkusJx/install-boost@v2.4.1
        with:
          boost_version: 1.80.0
          platform_version: 10.15
          toolset: 'clang'

      - name: install qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.5.1'
          target: 'desktop'
      - name: build demo
        run: |
          qmake
          cmake
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
